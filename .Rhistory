Freq = NA,
id = 25:249)
A3 <- rbind(A3,A3_1)
A4 <- read.csv("../doc/AA2.csv")
seoul <- shapefile("../data/TL_SCCO_SIG.shp")
seoul <- spTransform(seoul,CRS("+proj=longlat"))
seoul_map <- fortify(seoul)
merge_result <- merge(A3,seoul_map,by="id")
getgeocode <- GET(url =
paste0("https://api.bigdatahub.co.kr/v1/datahub/datasets/search.json?pid=1000908",
"&$count=25"),
add_headers(TDCAccessKey='55c155bca4d4ec0e16d51838827125e3f5906f9846db003df03d5f7fd2a7edba'),
accept_json())
#SET GEOCODE_CENTER
getapi_data = fromJSON(content(getgeocode, "text"))
geocode_center <- getapi_data$entry[-1]
geocode_center$경도 <- as.numeric(geocode_center$경도)
geocode_center$위도 <- as.numeric(geocode_center$위도)
A4 <- merge(A4,geocode_center,by.x = "Var1",by.y="구")
View(A4)
#CIRCLE
plotlab <- paste0(A4$Var1,"\n",A4$Freq)
#png("test.png",width = 6.5, height = 4.9,units = "in",res = 1200)
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group,fill = Freq),colour = "white",size=0.8,
show.legend = F) +
coord_cartesian(xlim=c(126.75,127.22),
ylim=c(37.42,37.705)) +
scale_fill_gradient(low = '#B3AEFF',high='#B3AEFF',na.value = "white") +
theme_void()+
geom_point(aes(x = 경도, y = 위도,colour = Freq),
size = 15,alpha = 1, data = A4) +
scale_colour_gradient(high="#6B66FF" ,low="#8F8AFF") +
annotate("text",x=A4$경도,y=A4$위도,label = plotlab,
size=3,color="white")
B1 <- read.csv("../doc/관광경쟁력.csv")
#png("test11.png",width = 6.5, height = 4.9,
#    units = "in",res = 1200)
ggplot(B1,aes(x=reorder(구, -종합지수),y=종합지수,fill=등급)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 43,size = 5,hjust = 0.8)) +
xlab("구")
dev.off()
#png("test11.png",width = 6.5, height = 4.9,
#    units = "in",res = 1200)
ggplot(B1,aes(x=reorder(구, -종합지수),y=종합지수,fill=등급)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 43,size = 5,hjust = 0.8)) +
xlab("구")
B1 <- read.csv("../doc/관광경쟁력.csv")
View(B1)
plot(x = B1$종합지수,)
plot(x = B1$종합지수,y=B1$인구밀도.명...)
cor(x = B1$종합지수,y=B1$인구밀도.명...)
str(B1)
B1 <- read.csv("../doc/관광경쟁력.csv")
cor(x = B1$종합지수,y=B1$인구밀도.명...)
cor(x = B1$종합지수,y=B1$인구밀도)
plot(x = B1$종합지수,y=B1$인구밀도)
ggplot() %>%
geom_point(aes(x = 종합지수,y=인구밀도),
data = B1)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도),
data = B1)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1)
lm(종합지수~인구밀도,data = B1)
plot(종합지수~인구밀도,data = B1)
abline(lm(종합지수~인구밀도,data = B1), col = "blue", lty = 2)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(lm(종합지수~인구밀도,data = B1))
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(aes(lm(종합지수~인구밀도,data = B1)))
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_smooth(method='lm',formula=인구밀도~종합지수)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_smooth(method='lm',formula=종합지수~인구밀도)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_smooth(method='lm')
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_smooth(method='lm')
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_smooth(method='lm',formula = 종합지수~인구밀도)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_smooth(method='lm',se=F)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_smooth(method='lm',col = "red")
lm(종합지수~인구밀도,data = B1)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 128.729626, slope = -0.001557)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 128.729626, slope = -0.001557)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 12872.9626, slope = -0.001557)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 12872.9626, slope = -000.1557)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 12872.9626, slope = -0.1557)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 12872.9626, slope = -0.1557)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 12872.9626, slope = -1.557)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 12872.9626, slope = -15.57)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 12872.9626, slope = -1557)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 12872.9626, slope = -155.7)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 12872.9626, slope = -155.7)
plot(인구밀도~종합지수,data = B1)
abline(lm(인구밀도~종합지수,data = B1), col = "blue", lty = 2)
lm(인구밀도~종합지수,data = B1)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 43371, slope = -255 )
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1) +
geom_abline(intercept = 43371, slope = -255 , col = "blue", lty = 2)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "blue", lty = 2)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "blue", lty = 2,size=2)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "blue", lty = 2,size=1)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)")
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수")
cor.test(인구밀도~종합지수,data = B1)
cor.test(인구밀도,종합지수,data = B1)
cor.test(B1$인구밀도,B1$종합지수)
cor.test(B1$인구밀도,B1$종합지수,method = spearman)
cor.test(B1$인구밀도,B1$종합지수,method = "spearman")
cor.test(B1$인구밀도,B1$종합지수)
lm1 <- cor.test(B1$인구밀도,B1$종합지수)
lm1
View(lm1)
lm1 <- cor(B1$인구밀도,B1$종합지수)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301")
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 2)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 50)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 10)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 8)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 7)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 7,col = "purple")
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 7,col = "lightpurple")
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 7,col = "purple")
png("test11.png",width = 6.5, height = 4.9,units = "in",res = 1200)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 7,col = "purple")
dev.off()
png("test11.png",width = 6.5, height = 4.9,
units = "in",res = 1200)
ggplot(B1,aes(x=reorder(구, -종합지수),y=종합지수,fill=등급)) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 43,size = 5,hjust = 0.8)) +
xlab("구")
dev.off()
png("test12.png",width = 6.5, height = 4.9,units = "in",res = 1200)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 7,col = "purple")
dev.off()
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 6,col = "purple")
png("test12.png",width = 6.5, height = 4.9,units = "in",res = 1200)
ggplot() +
geom_point(aes(x = 종합지수,y=인구밀도,colour = 등급),
data = B1,size = 2) +
geom_abline(intercept = 43371, slope = -255 ,
col = "purple", lty = 2,size=1) +
ylab("인구밀도(명/km^2)") +
xlab("관광경쟁력 종합지수") +
annotate("text",x=125,y=20000,label="cor = -0.6301",
size = 6,col = "purple")
dev.off()
dev.off()
AA <- NULL
for (i in 1:59) {
GTS0 <- GET(url = #paste0("http://korean.visitseoul.net/attractions",
"?curPage=",i),accept_json())
GTS1 <- fromJSON(content(GTS0,"text"))
AA <- rbind(AA,data.frame(place = GTS1$listVO$listObject$postSj,
adrs = GTS1$listVO$listObject$adres))
cat(i,"/59","\n",sep = "")
}
library(ggplot2)
library(plyr)
library(dplyr)
library(reshape2)
library(rgeos)
library(maptools)
library(raster)
library(readxl)
library(httr)
library(jsonlite)
knitr::opts_chunk$set(echo=T,message=F,warning=F,error = F)
for (i in 1:59) {
GTS0 <- GET(url = #paste0("http://korean.visitseoul.net/attractions",
"?curPage=",i),accept_json())
GTS1 <- fromJSON(content(GTS0,"text"))
AA <- rbind(AA,data.frame(place = GTS1$listVO$listObject$postSj,
adrs = GTS1$listVO$listObject$adres))
cat(i,"/59","\n",sep = "")
}
for (i in 1:59) {
GTS0 <- GET(url = paste0("http://korean.visitseoul.net/attractions",
"?curPage=",i),accept_json())
GTS1 <- fromJSON(content(GTS0,"text"))
AA <- rbind(AA,data.frame(place = GTS1$listVO$listObject$postSj,
adrs = GTS1$listVO$listObject$adres))
cat(i,"/59","\n",sep = "")
}
GTS_R <- read.csv("../doc/rawdata.csv")
View(GTS_R)
kableExtra::kable(head(GTS_R))
A1 <- read.csv("2009_v.csv")
A1 <- read.csv("doc/2009_v.csv")
test2 <- read.csv("doc/2011_v.csv")
A2 <- A1[,c(5,6,10,11,12,14,16)]
Z1 <- data.frame(table(A2$부상병코드))
A3 <- transform(A2,
main = ifelse(A2$주상병코드 == "B01"|
A2$주상병코드 == "B018"|
A2$주상병코드 == "B019",1,NA),
sub = ifelse(A2$부상병코드 == "J209",1,
ifelse(A2$부상병코드 == "J304",2,
ifelse(A2$부상병코드 == "J039",3,
ifelse(A2$부상병코드 == "J069",4,
ifelse(A2$부상병코드 == "L299",5,NA))))
)
)
A3$sub <- factor(A3$sub)
A3$성별코드 <- factor(A3$성별코드)
A3$진료과목코드 <- factor(A3$진료과목코드)
A3$연령대코드 <- (5*(A3$연령대코드-1)+5*(A3$연령대코드)-1)/2
A3 <- A3[A3$진료과목코드==1|A3$진료과목코드==4|A3$진료과목코드==11|
A3$진료과목코드==14|A3$진료과목코드==23,]
train <- A3[1:nrow(A3)/2,]
test <- A3[nrow(A3)/2+1:nrow(A3),]
library(dplyr)
library(plyr)
A3 <- A3 %>%
na.omit()
okfine <- lm(입내원일수~성별코드+연령대코드+진료과목코드+
심결요양급여비용총액+sub,data = train)
summary(okfine)
pred <- predict(okfine,newdata=test)
cor(pred,test$입내원일수,use="pairwise.complete.obs")
plot(pred,test$입내원일수)
plot(pred,test$입내원일수,xlim=c(0,5),ylim=c(0,5))
abline(okfine)
abline(pred)
cor1 <- cor(pred,test$입내원일수,use="pairwise.complete.obs")
cor1
plot(pred,test$입내원일수,xlim=c(0,5),ylim=c(0,5))
abline(pred)
abline(cor1)
abline(coef = cor1)
abline(a=c(0,5)b=c(0,5),coef = cor1)
abline(a=c(0,5),b=c(0,5),coef = cor1)
abline(a=c(0,5),b=c(0,5))
abline(a=c(0,5),coef = cor1)
library(ggplot2)
okfine
plot(pred,test$입내원일수,xlim=c(0,5),ylim=c(0,5))
abline(a=okfine$coef[1]+
okfine$coef[3],b=okfine$coef[2]+okfine$coef[4],col="red")
summary(okfine)
abline(a=okfine$coef[1]+
okfine$coef[4],b=okfine$coef[8],col="red")
dev.off()
names(okfine)
residuals(okfine)[1:2]
residuals(okfine)
okfine
plot(pred,test$입내원일수,xlim=c(0,5),ylim=c(0,5))
plot(pred,test$입내원일수,xlim=c(0,3),ylim=c(0,4))
abline(a=0.9654323,b=cor1,col="red")
plot(test$입내원일수,pred,xlim=c(0,4),ylim=c(0,3))
abline(a=0.9654323,b=cor1,col="red")
abline(a=1/0.9654323,b=cor1,col="red")
plot(test$입내원일수,pred,xlim=c(0,4),ylim=c(0,3))
plot(test$입내원일수,pred,xlim=c(0,2),ylim=c(0,2))
ggplot(aes(x=test$입내원일수,y=pred))+geom_point()
ploting <- data.frame(pred =pred,
value = test$입내원일수)
ggplot(aes(x=입내원일수,y=pred),data = ploting)+
geom_point()
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point()
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
xlim(0,5) +
ylim(0,5)
summary(okfine)
okfine
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
xlim(0,5) +
ylim(0,5)+
geom_abline(intercept=0.9654323,slope=cor1,col="red")
summary(test$입내원일수)
coef<-okfine$coef
coef
intercept=coef[1]+coef[2]
slope=coef[3]+coef[4]
intercept=sum(coef)
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
xlim(0,5) +
ylim(0,5)+
geom_abline(intercept=coef,slope=cor1,col="red")
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
xlim(0,5) +
ylim(0,5)+
geom_abline(intercept=coef,slope=cor1,col="red")
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
xlim(0,5) +
ylim(0,5)+
geom_abline(intercept=intercept,slope=cor1,col="red")
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
xlim(0,5) +
ylim(0,5)+
geom_abline(intercept=intercept,slope=intercept,col="red")
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
xlim(0,5) +
ylim(0,5)+
geom_abline(intercept=intercept,slope=intercept,col="red") +
geom_smooth(method = "lm")
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
xlim(0,5) +
ylim(0,5) +
geom_smooth(method = "lm")
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
coord_cartesian(xlim= c(0,5),ylim = c(0,5)) +
geom_smooth(method = "lm")
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
coord_cartesian(xlim= c(0,5),ylim = c(0,4)) +
geom_smooth(method = "lm")
ggplot(aes(x=value,y=pred),data = ploting)+
geom_point() +
xlim(0,5) +
ylim(0,5) +
geom_smooth(method = "lm")
