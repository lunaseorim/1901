lines(A3$전남[20:21],predicted_valuesy,lim = c(2000,3000),type="o",col="red")
lines(A3$전남[20:21],predicted_values,ylim = c(2000,3000),type="o",col="red")
plot(1:10A3$op,A3$전남)
plot(1:10,A3$op,A3$전남)
plot(1:10,A3$전남)
plot(1:10,A3[1:10,])
plot(1:10,A3[1:10,13])
lines(A3$전남[20:21],predicted_values,ylim = c(2000,3000),type="o",col="red")
plot(1:10,A3[1:20,13])
grid()
plot(1:10,A3[1:20,13])
plot(1:20,A3[1:20,13])
lines(A3$전남[:21],predicted_values,ylim = c(2000,3000),type="o",col="red")
plot(1:20,A3[1:20,13])
lines(A3$전남[1:21],predicted_values,ylim = c(2000,3000),type="o",col="red")
lines(A3$전남[20:21],predicted_values,ylim = c(2000,3000),type="o",col="red")
plot(1:20,A3[1:20,13])
lines(A3$전남[19:20],predicted_values,ylim = c(2000,3000),type="o",col="red")
plot(1:20,A3[1:20,13],ylim = c(2000,3000))
plot(1:20,A3[1:20,13],ylim = c(0,3000))
lines(A3$전남[19:20],predicted_values,ylim = c(2000,3000),type="o",col="red")
lines(A3$전남[19:20],predicted_values,type="o",col="red")
plot(1:20,A3[1:20,13],ylim = c(0,3000))
lines(A3$전남[19:20],predicted_values,type="o",col="red")
plot(1:2,real,xlab="기간",ylab="종가",ylim = c(2000,3000),type="o")
lines(2:3,predicted_values,type="o",col="red")
plot(1:10,A3[11:20,13],ylim = c(0,3000))
plot(11:20,A3[11:20,13],ylim = c(0,3000))
lines(A3$전남[19:20],predicted_values,type="o",col="red")
lines(19:20,predicted_values,type="o",col="red")
plot(c(1:2),real, type="o", col="blue")
lines(c(1:2),predicted_values, type="o", col="red")
plot <- function(x){ x %>%
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = week1)) +
scale_fill_gradient(low = 'white',high='orange') +
print(paste0("saving plot ", Yr))
ggsave(filename = paste0("./fig_output/ndwi/hgm_ndwi_",Yr,".png"),
width = 8,height=8,dpi = 150)}
plot <- function(x){ x %>%
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = paste0("week",x))) +
scale_fill_gradient(low = 'white',high='orange') +
print(paste0("saving plot ", Yr))
ggsave(filename = paste0("./fig_output/ndwi/hgm_ndwi_",Yr,".png"),
width = 8,height=8,dpi = 150)}
plot(1)
View(merge_result)
plot(2)
plot(week2)
plot <- function(x){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = x)) +
scale_fill_gradient(low = 'white',high='orange') +
print(paste0("saving plot ", Yr))
ggsave(filename = paste0("./fig_output/ndwi/hgm_ndwi_",Yr,".png"),
width = 8,height=8,dpi = 150)}
plot(week2)
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = x)) +
scale_fill_gradient(low = 'white',high='orange') +
print(paste0("saving plot ", Yr))
plot <- function(x){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = x)) +
scale_fill_gradient(low = 'white',high='orange') +
print(paste0("saving plot ", x))
ggsave(filename = paste0("./fig_output/ndwi/hgm_ndwi_",x,".png"),
width = 8,height=8,dpi = 150)}
plot(week2)
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = x)) +
scale_fill_gradient(low = 'white',high='orange')
plot <- function(x){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = x)) +
scale_fill_gradient(low = 'white',high='orange')
print(paste0("saving plot ", x))
ggsave(filename = paste0("./fig_output/ndwi/hgm_ndwi_",x,".png"),
width = 8,height=8,dpi = 150)}
plot(week2)
plot <- function(x){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = x)) +
scale_fill_gradient(low = 'white',high='orange')
ggsave(filename = paste0("./fig_output/ndwi/hgm_ndwi_",x,".png"),
width = 8,height=8,dpi = 150)}
plot(week2)
ggsave(filename = paste0("./fig_output/ndwi/hgm_ndwi_","x",".png"),
width = 8,height=8,dpi = 150)}
plot <- function(x){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = x)) +
scale_fill_gradient(low = 'white',high='orange')
ggsave(filename = paste0("./fig_output/ndwi/hgm_ndwi_","x",".png"),
width = 8,height=8,dpi = 150)}
plot(week2)
plot <- function(x){
plot <- function(x){
aa
asd
2
1
ga
sdv
cxzv
xc
plot <- function(x){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = x)) +
scale_fill_gradient(low = 'white',high='orange')}
plot(week2)
plot <- function(a){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = a)) +
scale_fill_gradient(low = 'white',high='orange')}
plot(week2)
View(plot)
plot("week2")
p <- ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = week1))+
scale_fill_gradient(low = 'white',high='orange')
p
plot <- function(week0){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = week0)) +
scale_fill_gradient(low = 'white',high='orange')}
plot("week2")
plot(week2)
plot <- function(y){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = substitute(y))) +
scale_fill_gradient(low = 'white',high='orange')}
plot(week2)
substitute(HIDDEN_NODES)
str(substitute(HIDDEN_NODES))
plot <- function(y){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = substitute(y))) +
scale_fill_gradient(low = 'white',high='orange')
print()}
plot(week2)
plot <- function(y){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = substitute(y))) +
scale_fill_gradient(low = 'white',high='orange')
print(y)}
plot(week2)
plot <- function(y){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = substitute(y))) +
scale_fill_gradient(low = 'white',high='orange')
print(paste0("saving plot ", substitute(y)))}
plot(week2)
plot <- function(y){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = substitute(y))) +
scale_fill_gradient(low = 'white',high='orange')}
plot(week2)
substitute(y)
str(substitute(y))
class(substitute(y))
wee <- "wee"
class(wee)
as.character(substitute(y))
class(as.character(substitute(y)))
plot <- function(y){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = as.character(substitute(y)))) +
scale_fill_gradient(low = 'white',high='orange')}
plot(week2)
plot <- function(y){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = as.character(y))) +
scale_fill_gradient(low = 'white',high='orange')}
plot(week2)
plot <- function(y){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = substitute(y))) +
scale_fill_gradient(low = 'white',high='orange')}
plot <- function(ok){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = substitute(ok))) +
scale_fill_gradient(low = 'white',high='orange')}
plot(week2)
plot <- function(ok){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = as.character(substitute(ok)))) +
scale_fill_gradient(low = 'white',high='orange')}
plot(week2)
View(merge_result)
colnames(merge_result)
str(colnames(merge_result))
plot <- function(ok){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group,
fill = merge_result$substitute(ok))) +
scale_fill_gradient(low = 'white',high='orange')}
plot(week2)
plot <- function(ok){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group,
fill = merge_result$substitute(ok)))}
plot(week2)
merge_result$substitute(ok)
plot <- function(ok){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group,
fill = merge_result[,substitute(ok)]))}
plot(week2)
plot <- function(ok, .fitted = ".fitted"){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group,
fill = ok))}
plot(week2)
plot <- function(ok, .fitted = ".fitted"){
ggplot() +
geom_polygon(data = merge_result,
aes_strings(x=long,y=lat,group=group,
fill = ok))}
plot(week2)
plot <- function(ok, .fitted = ".fitted"){
ggplot() +
geom_polygon(data = merge_result,
aes_string(x=long,y=lat,group=group,
fill = ok))}
plot(week2)
plot <- function(ok,long,lat,.fitted = ".fitted"){
ggplot() +
geom_polygon(data = merge_result,
aes_string(x=long,y=lat,
group=group,
fill = ok))}
plot(week2)
plot <- function(ok,long,lat,group,.fitted = ".fitted"){
ggplot() +
geom_polygon(data = merge_result,
aes_string(x=long,y=lat,
group=group,
fill = ok))}
plot(week2)
plot <- function(ok,long,lat,group,.fitted = ".fitted"){
ggplot(aes(group=group)) +
geom_polygon(data = merge_result,
aes_string(x=long,y=lat,
fill = ok))}
plot(week2)
plot <- function(ok,long,lat,"group"){
plot <- function(ok,long,lat,group){
ggplot() +
geom_polygon(data = merge_result,
aes_string(x=long,y=lat,
group=group,
fill = ok))}
plot(week2)
plot <- function(ok,long,lat,group){
ggplot() +
geom_polygon(data = merge_result,
aes_string(x=long,y=lat
fill = ok))}
plot <- function(ok,long,lat,group){
ggplot() +
geom_polygon(data = merge_result,
aes_string(x=long,y=lat,
fill = ok))}
plot(week2)
plot <- function(ok){
ggplot() +
geom_polygon(data = merge_result,
aes_string(x=long,y=lat,
fill = ok))}
plot(week2)
plot <- function(ok,long,lat,group){
ggplot() +
geom_polygon(data = merge_result,
aes_string(x=long,y=lat,
group=group,
fill = ok))}
plot(week2)
plot <- function(ok,long,lat,group){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,
group=group,
fill = ok))}
plot(week2)
plot <- function(ok,long,lat,group){
ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,
group=group,
fill = substitute(ok)))}
plot(week2)
plot(week2,long,lat,group)
p  +
ggsave(filename = paste0("../pic/OK_",1,".png"),
width = 8,height=8,dpi = 150)
p  +
ggsave(filename = paste0("../pic/OK_",1,".png"),
dpi = 150)
p
ggsave(filename = paste0("../pic/OK_",1,".png"),
dpi = 150)
map()
list.files(path = "../pic/", pattern = "*.png", full.names = T) %>%
map(image_read) %>%
image_join() %>%
image_animate(fps=2) %>%
image_write("A1.gif")
p <- ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = week2))+
scale_fill_gradient(low = 'white',high='orange')
ggsave(filename = paste0("../pic/OK_",2,".png"),
dpi = 150)
p
p
ggsave(filename = paste0("../pic/OK_",2,".png"),
dpi = 150)
p <- ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = week1))+
scale_fill_gradient(low = 'white',high='orange')
p
p
ggsave(filename = paste0("../pic/OK_",2,
width = 7,height=7,".png"),
dpi = 150)
p <- ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = week1))+
scale_fill_gradient(low = 'white',high='orange')
p
p
ggsave(filename = paste0("../pic/OK_",2),
width = 7,height=7,".png"),
ggsave(filename = paste0("../pic/OK_",2),
width = 7,height=7,".png")
ggsave(filename = paste0("../pic/OK_",2),
width = 7,height=7,".png", dpi = 150)
p
p
ggsave(filename = paste0("../pic/OK_",2),
width = 7,height=7,".png", dpi = 150)
p
ggsave(filename = paste0("../pic/OK_",1),
width = 7,height=7,".png", dpi = 150)
ggsave(filename = paste0("../pic/OK_",1),
width =8,height=8,".png", dpi = 150)
p
p
ggsave(filename = paste0("../pic/OK_",1),
width =8,height=8,".png", dpi = 150)
ggsave(filename = paste0("../pic/OK_",1),".png", dpi = 150)
ggsave(filename = paste0("../pic/OK_",1), dpi = 150)
p
ggsave(filename = paste0("../pic/OK_",1,".png"),
width = 7,height=7,dpi = 150)
p <- ggplot() +
geom_polygon(data = merge_result,
aes(x=long,y=lat,group=group, fill = week2))+
scale_fill_gradient(low = 'white',high='orange')
p
ggsave(filename = paste0("../pic/OK_",2,".png"),
width = 7,height=7,dpi = 150)
list.files(path = "../pic/", pattern = "*.png", full.names = T) %>%
map(image_read) %>%
image_join() %>%
image_animate(fps=2) %>%
image_write("A1.gif")
list.files(path = "../pic/", pattern = "*.png", full.names = T)
list.files(path = "../pic/", pattern = "*.png", full.names = T) %>%
image_join() %>%
image_animate(fps=2) %>%
image_write("A1.gif")
list.files(path = "../pic/", pattern = "*.png", full.names = T) %>%
image_join(.) %>%
image_animate(fps=2) %>%
image_write("A1.gif")
list.files(path = "../pic/", pattern = "*.png", full.names = T) %>%
map(image_read)
list.files(path = "../pic/", pattern = "*.png", full.names = T) %>%
map(image_read) %>%
image_join()
list.files(path = "../pic/", pattern = "*.png", full.names = T) %>%
map(image_read) %>%
image_join() %>%
image_animate(fps=2)
list.files(path = "../pic/", pattern = "*.png", full.names = T) %>%
map(image_read) %>%
image_join() %>%
image_animate(fps=2) %>%
image_write("A1.gif")
model<-nnet(in_learning,out_learning,size=HIDDEN_NODES,linout = TRUE,rang = 0.1,skip=TRUE,maxit = ITERATION)
in_forecasting<-getDataSet(A3$전남,9,12,INPUT_NODES)
in_forecasting
out_learning<-getDataSet(A3$전남,5,12,OUTPUT_NODES)
out_learning
model<-nnet(in_learning,out_learning,size=HIDDEN_NODES,linout = TRUE,rang = 0.1,skip=TRUE,maxit = ITERATION)
out_learning
in_learning
out_learning<-getDataSet(A3$전남,9,12,OUTPUT_NODES)
out_learning
out_learning<-getDataSet(A3$전남,3,12,OUTPUT_NODES)
out_learning
in_learning<-getDataSet(A3$전남,1,5,INPUT_NODES)
in_learning
in_learning<-getDataSet(A3$전남,1,8,INPUT_NODES)
in_learning
out_learning<-getDataSet(A3$전남,3,10,OUTPUT_NODES)
out_learning
out_learning<-getDataSet(A3$전남,3,8,OUTPUT_NODES)
out_learning
out_learning<-getDataSet(A3$전남,3,9,OUTPUT_NODES)
out_learning
in_learning
out_learning<-getDataSet(A3$전남,3,8,OUTPUT_NODES)
out_learning
model<-nnet(in_learning,out_learning,size=HIDDEN_NODES,linout = TRUE,rang = 0.1,skip=TRUE,maxit = ITERATION)
in_forecasting<-getDataSet(A3$전남,9,12,INPUT_NODES)
in_forecasting
predicted_values<-predict(model,in_forecasting,type="raw")
predicted_values
real<-getDataSet(A3$전남,13,14,OUTPUT_NODES)
real
model<-nnet(in_learning,out_learning,size=HIDDEN_NODES,linout = TRUE,rang = 0.1,skip=TRUE,maxit = ITERATION)
predicted_values<-predict(model,in_forecasting,type="raw")
predicted_values
real
ERR<-abs(real-predicted_values)
MAPE<-mean(ERR/real)*100
MAPE
out_learning<-getDataSet(A3$전남,5,10,OUTPUT_NODES)
out_learning
model<-nnet(in_learning,out_learning,size=HIDDEN_NODES,linout = TRUE,rang = 0.1,skip=TRUE,maxit = ITERATION)
in_forecasting<-getDataSet(A3$전남,9,12,INPUT_NODES)
in_forecasting
predicted_values<-predict(model,in_forecasting,type="raw")
predicted_values
real
ERR<-abs(real-predicted_values)
MAPE<-mean(ERR/real)*100
MAPE
in_forecasting<-getDataSet(A3$전남,3,6,INPUT_NODES)
in_forecasting
predicted_values<-predict(model,in_forecasting,type="raw")
predicted_values
real<-getDataSet(A3$전남,13,14,OUTPUT_NODES)
real
ERR<-abs(real-predicted_values)
MAPE<-mean(ERR/real)*100
MAPE
real<-getDataSet(A3$전남,11,12,OUTPUT_NODES)
real
in_learning<-getDataSet(A3$전남,1,8,INPUT_NODES)
in_learning
out_learning<-getDataSet(A3$전남,3,10,OUTPUT_NODES)
out_learning
out_learning<-getDataSet(A3$전남,3,8,OUTPUT_NODES)
out_learning
model<-nnet(in_learning,out_learning,size=HIDDEN_NODES,linout = TRUE,rang = 0.1,skip=TRUE,maxit = ITERATION)
in_forecasting<-getDataSet(A3$전남,9,12,INPUT_NODES)
in_forecasting
predicted_values<-predict(model,in_forecasting,type="raw")
predicted_values
real<-getDataSet(A3$전남,13,14,OUTPUT_NODES)
real
real<-getDataSet(A3$전남,14,15,OUTPUT_NODES)
real
ERR<-abs(real-predicted_values)
MAPE<-mean(ERR/real)*100
MAPE
in_forecasting<-getDataSet(A3$전남,5,8,INPUT_NODES)
in_forecasting
predicted_values<-predict(model,in_forecasting,type="raw")
predicted_values
real<-getDataSet(A3$전남,10,11,OUTPUT_NODES)
real
real<-getDataSet(A3$전남,9,10,OUTPUT_NODES)
real
real<-getDataSet(A3$전남,8,9,OUTPUT_NODES)
real
ERR<-abs(real-predicted_values)
MAPE<-mean(ERR/real)*100
MAPE
